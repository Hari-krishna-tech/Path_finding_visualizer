[{"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\index.js":"1","F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\reportWebVitals.js":"2","F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\App.js":"3","F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\PathFindingVisualizer\\PathFindingVisualizer.jsx":"4","F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\PathFindingVisualizer\\Node\\Node.jsx":"5","F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\algorithms\\dijkstra.js":"6","F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\mazeAlgorithms\\recursiveDivisionMaze.js":"7"},{"size":501,"mtime":1608447535683,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":258,"mtime":1608443587212,"results":"11","hashOfConfig":"9"},{"size":10961,"mtime":1608867273438,"results":"12","hashOfConfig":"9"},{"size":731,"mtime":1608807417118,"results":"13","hashOfConfig":"9"},{"size":1975,"mtime":1608866633861,"results":"14","hashOfConfig":"9"},{"size":2154,"mtime":1608542786180,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"2jgawj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\index.js",[],["32","33"],"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\reportWebVitals.js",[],"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\App.js",[],"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\PathFindingVisualizer\\PathFindingVisualizer.jsx",["34","35","36","37","38","39","40","41","42","43","44","45"],"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\PathFindingVisualizer\\Node\\Node.jsx",[],"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\algorithms\\dijkstra.js",[],"F:\\Path_finding_visualizer\\path_finding_visualizer\\src\\mazeAlgorithms\\recursiveDivisionMaze.js",["46","47","48","49","50"],"\r\n\r\nconst walls = []\r\nlet grid = []\r\n\r\nexport const recursiveDivisionMaze = (board) => {\r\n  walls.splice(0,walls.length)\r\n  console.log(board)\r\n    \r\n    grid = board\r\n\r\n    addOuterWalls(grid);\r\n    \r\n    addInnerWalls(false, 1, grid[0].length - 2, 1, grid.length - 2);\r\n    return walls;\r\n}\r\n\r\nfunction addOuterWalls(grid) {\r\n    for (var i = 0; i < grid.length; i++) {\r\n        if (i == 0 || i == (grid.length - 1)) {\r\n            for (var j = 0; j < grid[0].length; j++) {\r\n                walls.push(grid[i][j])\r\n            }\r\n        } else {\r\n            if(!grid[i][0].isStart && !grid[i][0].isFinish) walls.push(grid[i][0]);\r\n            if(!grid[i][grid[0].length - 1].isStart && !grid[i][grid[0].length - 1].isFinish) walls.push(grid[i][grid[0].length - 1]) \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction addInnerWalls(h, minX, maxX, minY, maxY) {\r\n    if (h) {\r\n\r\n        if (maxX - minX < 2) {\r\n            return;\r\n        }\r\n\r\n        var y = Math.floor(randomNumber(minY, maxY)/2)*2;\r\n        addHWall(minX, maxX, y);\r\n\r\n        addInnerWalls(!h, minX, maxX, minY, y-1);\r\n        addInnerWalls(!h, minX, maxX, y + 1, maxY);\r\n    } else {\r\n        if (maxY - minY < 2) {\r\n            return;\r\n        }\r\n\r\n        var x = Math.floor(randomNumber(minX, maxX)/2)*2;\r\n        addVWall(minY, maxY, x);\r\n\r\n        addInnerWalls(!h, minX, x-1, minY, maxY);\r\n        addInnerWalls(!h, x + 1, maxX, minY, maxY);\r\n    }\r\n}\r\n\r\nfunction addHWall(minX, maxX, y) {\r\n    var hole = Math.floor(randomNumber(minX, maxX)/2)*2+1;\r\n\r\n    for (var i = minX; i <= maxX; i++) {\r\n        if (i != hole && !grid[y][i].isFinish && !grid[y][i].isStart) {\r\n          walls.push(grid[y][i])\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction addVWall(minY, maxY, x) {\r\n    var hole = Math.floor(randomNumber(minY, maxY)/2)*2+1;\r\n\r\n    for (var i = minY; i <= maxY; i++) {\r\n        if (i != hole && !grid[i][x].isFinish && !grid[i][x].isStart ) {\r\n          walls.push(grid[i][x]);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst getOreintation = (w,h) => {\r\n  return w>h;\r\n}\r\n\r\nfunction randomNumber(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n\r\n    \r\n\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":22,"column":12,"nodeType":"57","messageId":"58","endLine":22,"endColumn":21},{"ruleId":"55","severity":1,"message":"59","line":22,"column":22,"nodeType":"57","messageId":"58","endLine":22,"endColumn":34},{"ruleId":"60","severity":1,"message":"61","line":281,"column":15,"nodeType":"62","messageId":"63","endLine":281,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":281,"column":31,"nodeType":"62","messageId":"63","endLine":281,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":323,"column":9,"nodeType":"57","messageId":"66","endLine":323,"endColumn":16},{"ruleId":"60","severity":1,"message":"67","line":331,"column":42,"nodeType":"62","messageId":"63","endLine":331,"endColumn":44},{"ruleId":"60","severity":1,"message":"67","line":331,"column":64,"nodeType":"62","messageId":"63","endLine":331,"endColumn":66},{"ruleId":"60","severity":1,"message":"67","line":336,"column":43,"nodeType":"62","messageId":"63","endLine":336,"endColumn":45},{"ruleId":"60","severity":1,"message":"67","line":336,"column":65,"nodeType":"62","messageId":"63","endLine":336,"endColumn":67},{"ruleId":"64","severity":1,"message":"65","line":354,"column":13,"nodeType":"57","messageId":"66","endLine":354,"endColumn":20},{"ruleId":"60","severity":1,"message":"67","line":365,"column":50,"nodeType":"62","messageId":"63","endLine":365,"endColumn":52},{"ruleId":"60","severity":1,"message":"67","line":365,"column":72,"nodeType":"62","messageId":"63","endLine":365,"endColumn":74},{"ruleId":"60","severity":1,"message":"61","line":20,"column":15,"nodeType":"62","messageId":"63","endLine":20,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":20,"column":25,"nodeType":"62","messageId":"63","endLine":20,"endColumn":27},{"ruleId":"60","severity":1,"message":"67","line":62,"column":15,"nodeType":"62","messageId":"63","endLine":62,"endColumn":17},{"ruleId":"60","severity":1,"message":"67","line":73,"column":15,"nodeType":"62","messageId":"63","endLine":73,"endColumn":17},{"ruleId":"55","severity":1,"message":"68","line":80,"column":7,"nodeType":"57","messageId":"58","endLine":80,"endColumn":21},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'addWeight' is assigned a value but never used.","Identifier","unusedVar","'setAddWeight' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'newNode' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'getOreintation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]